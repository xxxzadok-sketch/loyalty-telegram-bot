from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from database import SessionLocal, User, Booking
from sqlalchemy.orm import Session


async def start_booking(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    context.user_data['booking_step'] = 0
    await query.edit_message_text(
        "üéØ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∞\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "–î–∞—Ç–∞ (–î–î.–ú–ú.–ì–ì–ì–ì) –í—Ä–µ–º—è (–ß–ß:–ú–ú) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: 25.12.2024 19:30 4"
    )


async def handle_booking_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text

    db: Session = SessionLocal()

    try:
        user = db.query(User).filter(User.telegram_id == user_id, User.registration_complete == True).first()
        if not user:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
            return

        # –ü–∞—Ä—Å–∏–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        try:
            parts = text.split()
            if len(parts) != 3:
                raise ValueError

            date_str, time_str, guests_str = parts
            guests = int(guests_str)

            # –°–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            booking = Booking(
                user_id=user.id,
                date=date_str,
                time=time_str,
                guests=guests
            )
            db.add(booking)
            db.commit()

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            await notify_admin_about_booking(context, user, booking)

            await update.message.reply_text(
                f"‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!\n\n"
                f"–î–∞—Ç–∞: {date_str}\n"
                f"–í—Ä–µ–º—è: {time_str}\n"
                f"–ì–æ—Å—Ç–∏: {guests} —á–µ–ª.\n\n"
                f"–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
            )

        except ValueError:
            await update.message.reply_text(
                "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "–î–∞—Ç–∞ –í—Ä–µ–º—è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_–≥–æ—Å—Ç–µ–π\n\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: 25.12.2024 19:30 4"
            )

    finally:
        db.close()


async def notify_admin_about_booking(context, user, booking):
    message = f"üéØ –ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!\n\n"
    message += f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name} {user.last_name}\n"
    message += f"ID: {user.id}\n"
    message += f"–¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}\n"
    message += f"–î–∞—Ç–∞: {booking.date}\n"
    message += f"–í—Ä–µ–º—è: {booking.time}\n"
    message += f"–ì–æ—Å—Ç–∏: {booking.guests} —á–µ–ª."

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    from config import ADMIN_IDS
    for admin_id in ADMIN_IDS:
        try:
            await context.bot.send_message(chat_id=admin_id, text=message)
        except:
            pass