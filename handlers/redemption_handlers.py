from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters
from database import Database
from config import ADMIN_IDS

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è –±–∞–ª–ª–æ–≤
REDEEM_AMOUNT = range(1)

db = Database()


async def start_redemption(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    user = db.get_user_by_telegram_id(query.from_user.id)
    if not user:
        await query.edit_message_text("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /start")
        return ConversationHandler.END

    if user[5] <= 0:
        await query.edit_message_text("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è.")
        return ConversationHandler.END

    context.user_data['redemption_user_id'] = user[0]
    context.user_data['redemption_user_data'] = user

    await query.edit_message_text(
        f"üîÑ –°–ø–∏—Å–∞–Ω–∏–µ –±–∞–ª–ª–æ–≤\n\n"
        f"üíé –î–æ—Å—Ç—É–ø–Ω–æ –±–∞–ª–ª–æ–≤: {user[5]}\n"
        f"üí° 1 –±–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–ª = 1 —Ä—É–±–ª—å\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è:"
    )
    return REDEEM_AMOUNT


async def get_redemption_amount(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        points = int(update.message.text.strip())
        user_data = context.user_data['redemption_user_data']

        if points <= 0:
            await update.message.reply_text("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º. –í–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:")
            return REDEEM_AMOUNT

        if points > user_data[5]:
            await update.message.reply_text(
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤. –î–æ—Å—Ç—É–ø–Ω–æ: {user_data[5]}\n"
                f"–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:"
            )
            return REDEEM_AMOUNT

        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ
        try:
            request_id = db.create_redemption_request(context.user_data['redemption_user_id'], points)

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
            from main import application
            user = user_data

            for admin_id in ADMIN_IDS:
                try:
                    keyboard = [
                        [
                            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"admin_approve_{request_id}"),
                            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"admin_reject_{request_id}")
                        ]
                    ]
                    reply_markup = InlineKeyboardMarkup(keyboard)

                    admin_message = f"""
üîÑ –ó–ê–ü–†–û–° –ù–ê –°–ü–ò–°–ê–ù–ò–ï –ë–ê–õ–õ–û–í

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user[2]} {user[3]}
üÜî ID: {user[0]}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user[4]}
üíé –ó–∞–ø—Ä–æ—à–µ–Ω–æ –±–∞–ª–ª–æ–≤: {points}
üí∞ –°—É–º–º–∞: {points} —Ä—É–±.
üìÖ –ó–∞–ø—Ä–æ—Å: #{request_id}
                    """

                    await application.bot.send_message(
                        admin_id,
                        admin_message,
                        reply_markup=reply_markup
                    )
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

            success_text = f"""
‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!

üíé –ë–∞–ª–ª–æ–≤ –∫ —Å–ø–∏—Å–∞–Ω–∏—é: {points}
üí∞ –°—É–º–º–∞: {points} —Ä—É–±.

‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.
            """

            keyboard = [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await update.message.reply_text(success_text, reply_markup=reply_markup)

        except Exception as e:
            error_msg = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            if "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤" in str(e):
                error_msg = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è."
            await update.message.reply_text(error_msg)

        context.user_data.clear()
        return ConversationHandler.END

    except ValueError:
        await update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ:")
        return REDEEM_AMOUNT


async def cancel_redemption(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –°–ø–∏—Å–∞–Ω–∏–µ –±–∞–ª–ª–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    context.user_data.clear()
    return ConversationHandler.END