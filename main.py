# main.py
import logging
import os
import asyncio
from flask import Flask, request
from telegram import Update

from bot import create_application
from config import BOT_TOKEN

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

app = Flask(__name__)
application = None


@app.route('/')
def index():
    return "ü§ñ Telegram Loyalty Bot is running via Webhook!"


def init_bot():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
    global application

    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = create_application()
        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω–æ")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        loop.run_until_complete(application.initialize())
        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
        webhook_url = os.environ.get('RENDER_EXTERNAL_URL', '') + '/webhook'
        if webhook_url.startswith('https://'):
            loop.run_until_complete(application.bot.set_webhook(webhook_url))
            logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
        else:
            logger.warning("‚ö†Ô∏è Webhook URL –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ HTTPS")

        logger.info("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        return application

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
        return None


@app.route('/webhook', methods=['POST'])
def webhook():
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –æ—Ç Telegram"""
    global application

    if application is None:
        logger.error("‚ùå Application –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        return 'error', 500

    try:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
        update_data = request.get_json()
        update = Update.de_json(update_data, application.bot)

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–π–Ω–æ–µ loop –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

        try:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            loop.run_until_complete(application.process_update(update))
            return 'ok'
        finally:
            loop.close()

    except Exception as e:
        logger.error(f"Webhook error: {e}")
        return 'error', 500


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
application = init_bot()

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask
    port = int(os.environ.get("PORT", 10000))
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host='0.0.0.0', port=port, debug=False)